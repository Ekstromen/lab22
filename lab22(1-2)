#define _CRT_SECURE_NO_DEPRECATE
#include <stdio.h>
#include <stdlib.h>
#include <locale.h>
#include <math.h>

typedef double (*Tfun) (double);

double fun1(double);
double fun2(double);
double fun3(double);
void out_rez(Tfun, double, double, double);

typedef struct {
	double x;
	double y;
	char name;
}point;

int putpoint(point* point);
int fill(point* point, int s);

int main() {
	point Points[4] = {0,0,'A',0,0,'B',0,0,'C',0,0,'D'};
	double a, b, c, x;
	int s = 0;
	int h = 0;
	setlocale(LC_ALL, "rus");
	printf("\nВыберите функцию: 1) Y(x); 2) V(x); 3) S(x);\n");
	scanf("%d",&s);
	fill(Points,s);
	switch (s)
	{
	case 1:
		
		printf("Выберите действие: 1) вычислить значение; 2) Табулировать; 3) Выполнить операцию\n");
		scanf("%d",&h);
		
		switch (h)
		{
		case 1:
			
			printf("Введите значение х:\n");
			scanf("%lf", &x);
			printf("Y(x) = %lf", fun1(x));
			break;
		case 2:
			puts("Введите a, b, c");
			scanf("%lf", &a);
			scanf("%lf", &b);
			scanf("%lf", &c);
			printf("\nFunction: Y(x) = ln(|(x)^1/3|), при  x > 0:");
			printf("\n");
			out_rez(fun1, a, b, c);
			break;
		case 3:
			putpoint(Points);
			break;
		default:
			printf("Введен неверный символ");
			break;
		}
		break;

	case 2:
		
		printf("Выберите действие: 1) вычислить значение; 2) Табулировать; 3) Выполнить операцию\n");
		scanf("%d", &h);
		switch (h)
		{
		case 1:
			printf("Введите значение х:\n");
			scanf("%lf", &x);
			printf("Y(x) = %lf", fun2(x));
			break;
		case 2:
			puts("Введите a, b, c");
			scanf("%lf", &a);
			scanf("%lf", &b);
			scanf("%lf", &c);
			printf("\nFunction: V(x) = (tg((x^2)-1))1/2, при x > 1; V(x) = -2x, при 0 <= x <= 1; V(x) = e^cos(x), при x < 0:");
			printf("\n");
			out_rez(fun2, a, b, c);
			break;
		case 3:
			putpoint(Points);
			break;
		default:
			printf("Введен неверный символ");
			break;
		}
		break;
	
	case 3:

		printf("Выберите действие: 1) вычислить значение; 2) Табулировать; 3) Выполнить операцию\n");
		scanf("%d", &h);
		switch (h)
		{
		case 1:

			printf("Введите значение 0 < х < 1:\n");
			scanf("%lf", &x);
			printf("Y(x) = %lf", fun3(x));
			break;
		case 2:
			puts("Введите a, b, c");
			scanf("%lf", &a);
			scanf("%lf", &b);
			scanf("%lf", &c);
			printf("\nFunction: S(x) = (x-1/x+1) + (1/3) * (x-1/x+1)^3 + (1/5) * (x-1/x+1)^5 + (1/7) * (x-1/x+1)^7");
			printf("\n");
			out_rez(fun3, a, b, c);
			break;
		case 3:
			putpoint(Points);
			break;
		default:
			printf("Введен неверный символ");
			break;
		}
		break;

	default:
		printf("Введен неверный символ");
		break;
	}

}

double fun1(double x) {
	if (x > 0) return log(fabs(sqrt(pow(x, 3))));
}

double fun2(double x) {
	if (x > 1) return sqrt(tan(x * x - 1));
	else if (0 <= x && x <= 1) return -2 * x;
	else if (x < 0) return exp(cos(x));
}

double fun3(double x) {
	return ((x - 1) / (x + 1)) + (1 / 3) * pow((x - 1) / (x + 1), 3) + (1 / 5) * pow((x - 1) / (x + 1), 5) + (1 / 7) * pow((x - 1) / (x + 1), 7);
}

void out_rez(Tfun f, double a, double b, double c) {
	for (double x = a; x <= b; x += c) {
		printf("x = %5.2lf,\ty = %8.4lf\n", x, f(x));
	}
}

int putpoint(point* point) {
	for (int i = 0; i < 4; i++) {
		printf("Name = '%c', X = %.2lf, Y = %.2lf\n", point[i].name, point[i].x, point[i].y);
	}
}

int fill(point* point, int s){
	for (int i = 0; i < 4; i++) {
		if (s == 1) {
			point[i].x = fun1(i+(rand() % 5)+1);
			point[i].y = fun1(point[i].x);
		}

		if (s == 2) {
			point[i].x = fun2(i+(rand() % 5)+1);
			point[i].y = fun2(point[i].x);
		}

		if (s == 3) {
			point[i].x = fun3(i+(rand() % 5)+1);
			point[i].y = fun3(point[i].x);
		}
	}
}
